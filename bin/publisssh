#!/usr/bin/env coffee

optimist = require 'optimist'

cwd = process.cwd()

options = optimist.usage('''
  Usage:
    publisssh some/source some-bucket/some/destination -fr
''').options({
  r: alias: 'remove', description: 'Delete remote files that don\'t exist locally'
  d: alias: 'dry-run', description: 'Don\'t change anything remotely.'
  k: alias: 'key', description: 'AWS access key ID'
  s: alias: 'secret', description: 'AWS secret access key'
  c: alias: 'config', description: 'Configuration file'
  h: alias: 'help', description: 'Show options'
  v: alias: 'version', description: 'Show the version number'
  i: alias: 'ignore', descriptions: 'Ignore files matching this expression'
}).argv

if options.help
  optimist.showHelp()
  process.exit 0

else if options.version
  {version} = require '../package'
  console.log version
  process.exit 0

else
  path = require 'path'
  Publisher = require '../lib/publisher'

  try
    config = require path.resolve cwd, options.config || 'publisssh'
    options[option] = value for option, value of config when not (option of options)

  # Unpack command line arguments.
  {_: [localFromArgs, remoteFromArgs]} = options

  local = path.resolve cwd, localFromArgs || options.local || cwd
  remote = remoteFromArgs || options.remote || path.basename cwd

  [bucketFromRemote, prefixesFromRemote...] = remote.split path.sep
  prefixFromRemote = prefixesFromRemote.join path.sep

  bucket = options.bucket || bucketFromRemote
  prefix = options.prefix || prefixFromRemote

  publisher = new Publisher {local, bucket, prefix, options}
  publisher.publish()
